name: Connect to Vault to gather secrets
on: workflow_dispatch
permissions:
    id-token: write
    contents: read
jobs:
    ConnectToVault:
        runs-on: ubuntu-latest
        steps:
            - name: checkout repostory
              uses: actions/checkout@v3

            - name: Install Vault CLI
              run: |
                curl -fsSL https://releases.hashicorp.com/vault/1.15.0/vault_1.15.0_linux_amd64.zip -o vault.zip
                unzip vault.zip && sudo mv vault /usr/local/bin/
                export VAULT_ADDR="ec2-34-202-161-230.compute-1.amazonaws.com:8200"
                echo $VAULT_ADDR
                vault -v
                curl -I $VAULT_ADDR/v1/sys/health # Check if Vault is reachable and health
            
            # - name: authenticate to Vault using JWT
            #   id: vault_auth
            #   run: |
            #     export VAULT_ADDR="ec2-34-202-161-230.compute-1.amazonaws.com:8200"
            #     echo $VAULT_ADDR
            #     if [ -z "$ACTIONS_ID_TOKEN_REQUEST_URL" ] || [ -z "$ACTIONS_ID_TOKEN_REQUEST_TOKEN" ]; then
            #       echo "Required GitHub Actions OIDC environment variables are not set."
            #       exit 1
            #     fi
            #     jwt_token=$(curl -s $ACTIONS_ID_TOKEN_REQUEST_URL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" | jq -r '.value')
            #     vault login -method=jwt role="cbu_jwt_role" jwt="$jwt_token"

            - name: Authenticate to Vault using Vault jwt roles to get Azure SP credentials
              id: vault_jwt_auth
              uses: hashicorp/vault-action@v3
              with:
                url: "http://ec2-34-202-161-230.compute-1.amazonaws.com:8200"
                method: jwt
                role: cbu_jwt_role
                secrets: |
                  azure/creds/azure_role_resource_deploy client_id | CLIENT_ID;
                  azure/creds/azure_role_resource_deploy client_secret | CLIENT_SECRET;
                # If you want to use the GitHub Actions OIDC token, uncomment the following lines
                # kv/data/aabk/dev/pipeline/sp password | PASSWORD;
                # kv/data/aabk/dev/pipeline/sp username | USERNAME;
                #  export VAULT_ADDR="http://ec2-34-228-142-60.compute-1.amazonaws.com:8200"
                #  jwt_token=$(curl -s $ACTIONS_ID_TOKEN_REQUEST_URL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" | jq -r '.value')
                #  vault login -method=jwt -path=jwt/ role="get-azure-creds-role" jwt="$jwt_token"

            - name: Read Dynamic Azure SP credentials
              run: |
                echo "Client_id: ${{ steps.vault_jwt_auth.outputs.CLIENT_ID }}"
                echo "Client_secret: ${{ steps.vault_jwt_auth.outputs.CLIENT_SECRET }}"
                echo "Vault authentication successful and secrets retrieved."

            # - name: Set up Azure credentials and login to azure
            #   uses: azure/login@v1
            #   with:
            #     client-id: ${{ steps.vault_jwt_auth.outputs.CLIENT_ID }}
            #     # client-secret: ${{ steps.vault_jwt_auth.outputs.CLIENT_SECRET }}
            #     tenant-id: "066fe1a7-14e1-4d6c-9f26-61b3da1d6f45" # Replace with your Azure tenant ID
            #     enable-AzPSSession: true
            - name: Set up Azure credentials and login to azure
              run: |
                tenant-id: "066fe1a7-14e1-4d6c-9f26-61b3da1d6f45" # Replace with your Azure tenant ID
                az login --service-principal --username ${{ steps.vault_jwt_auth.outputs.CLIENT_ID }} --password ${{ steps.vault_jwt_auth.outputs.CLIENT_SECRET }} --tenant $tenant-id
                echo "Azure login successful with service principal credentials."